=============================
ps
=============================

用于报告当前系统的进程状态.
可以搭配kill指令随时中断、删除不必要的程序。

ps命令是最基本同时也是非常强大的进程查看命令，
使用该命令可以确定有哪些进程正在运行和运行的状态、
进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等，
总之大部分信息都是可以通过执行该命令得到.

选项::

  -a
    显示所有终端机下执行的程序，除了阶段作业领导者之外。
  a
    显示现行终端机下的所有程序，包括其他用户的程序。
  -A
    显示所有程序。
  -c
    显示CLS和PRI栏位。
  c
    列出程序时，显示每个程序真正的指令名称，而不包含路径，选项或常驻服务的标示。
  -C<指令名称>
    指定执行指令的名称，并列出该指令的程序的状况。
  -d
    显示所有程序，但不包括阶段作业领导者的程序。
  -e
    此选项的效果和指定"A"选项相同。
  e
    列出程序时，显示每个程序所使用的环境变量。
  -f
    显示UID,PPIP,C与STIME栏位。
  f
    用ASCII字符显示树状结构，表达程序间的相互关系。
  -g<群组名称>
    此选项的效果和指定"-G"选项相同，当亦能使用阶段作业领导者的名称来指定。
  g
    显示现行终端机下的所有程序，包括群组领导者的程序。
  -G<群组识别码>
    列出属于该群组的程序的状况，也可使用群组名称来指定。
  h
    不显示标题列。
  -H
    显示树状结构，表示程序间的相互关系。
  -j或j
    采用工作控制的格式显示程序状况。
  -l或l
    采用详细的格式来显示程序状况。
  L
    列出栏位的相关信息。
  -m或m
    显示所有的执行绪。
  n
    以数字来表示USER和WCHAN栏位。
  -N
    显示所有的程序，除了执行ps指令终端机下的程序之外。
  -p<程序识别码>
    指定程序识别码，并列出该程序的状况。
  p<程序识别码>
    此选项的效果和指定"-p"选项相同，只在列表格式方面稍有差异。
  r
    只列出现行终端机正在执行中的程序。
  -s<阶段作业>
    指定阶段作业的程序识别码，并列出隶属该阶段作业的程序的状况。
  s
    采用程序信号的格式显示程序状况。
  S
    列出程序时，包括已中断的子程序资料。
  -t<终端机编号>
    指定终端机编号，并列出属于该终端机的程序的状况。
  t<终端机编号>
    此选项的效果和指定"-t"选项相同，只在列表格式方面稍有差异。
  -T
    显示现行终端机下的所有程序。
  -u<用户识别码>
    此选项的效果和指定"-U"选项相同。
  u
    以用户为主的格式来显示程序状况。
  -U<用户识别码>
    列出属于该用户的程序的状况，也可使用用户名称来指定。
  U<用户名称>
    列出属于该用户的程序的状况。
  v
    采用虚拟内存的格式显示程序状况。
  x
    显示所有程序，不以终端机来区分。
  X
    采用旧式的Linux i386登陆格式显示程序状况。

关于ps 的 stat状态解释
=============================

状态说明::

  X    死掉的进程（未开启）
  <    高优先级
  N    低优先级
  L    有些页被锁进内存，有记忆体的分页分配并锁在记忆体内
  s    包含子进程，某一个会话的Leader进程
  \+    位于后台的进程组，属于某个前台组的进程
  l    多线程，克隆线程 multi-threaded (using CLONE_THREAD, like NPTL pthreads do)
  WCHAN    正在等待的进程资源
  D    不可中断的进程，不可中断睡眠（通常是在IO操作）收到信号不唤醒和不可运行，进程必须等待直到有中断发生
  R    正在执行中，正在运行或可运行（在运行队列排队中）
  S    静止状态，可中断睡眠（休眠中，受阻，在等待某个条件的形成或接受到信号）
  T    暂停执行
  Z    僵尸进程，进程已终止，但进程描述符存在，直到父进程调用wait4()系统调用后释放
  W    没有足够的记忆体分页可分配 ，正在换页（2.6内核之前有效）

.. note::

  关于grep搜索进程时, 排出自身, 见 :ref:`GrepExclude`


