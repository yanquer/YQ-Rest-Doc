===============
set
===============


.. post:: 2023-02-23 23:14:15
  :tags: linux, linux指令
  :category: 操作系统
  :author: YanQue
  :location: CD
  :language: zh-cn


set命令用于设置显示当前shell的变量。

set指令能设置所使用shell的执行方式，可依照不同的需求来做设置。

语法::

    set [+-abCdefhHklmnpPtuvx]

若不加任何参数, 会 **显示当前的环境变量和位置参数**.
这时候于env区别可见: :doc:`/docs/操作系统/linux/linux指令/env`

常用::

    # set
    -e                #若指令传回值不等于0，则立即退出
    +e                #关闭上面那个，让原脚本继续执行 一般配套使用
    -- <args>         #设置参数 如 set -- h1 h2 ;echo $@,$#
                      #h1 h2,2

选项参数
===============

-a    标示已修改的变量，以供输出至环境变量。
-b    使被中止的后台程序立刻回报执行状态。
-C    转向所产生的文件无法覆盖已存在的文件。
-d    Shell预设会用杂凑表记忆使用过的指令，以加速指令的执行。使用-d参数可取消。
-e    若指令传回值不等于0，则立即退出shell。
-f    取消使用通配符。
-h    自动记录函数的所在位置。
-H<Shell>
      可利用"!"加<指令编号>的方式来执行history中记录的指令。
-k    指令所给的参数都会被视为此指令的环境变量。
-l    记录for循环的变量名称。
-m    使用监视模式。
-n    只读取指令，而不实际执行。
-p    启动优先顺序模式。
-P    启动-P参数后，执行指令时，会以实际的文件或目录来取代符号连接。
-t    执行完随后的指令，即退出shell。
-u    当执行时使用到未定义过的变量，则显示错误信息, 可以与-e一起使用
-v    显示shell所读取的输入值。
-x    执行指令后，会先显示该指令及所下的参数。
-gx   设置全局变量
-sx   设置本地变量

其他::

    +<参数>     取消某个set曾启动的参数。

一些用途
===============

set 指令在Shell脚本中有多种作用，以下是一些常见的用法:

- 设置位置参数：使用 set 命令可以将一个或多个值设置为脚本的位置参数。
  例如：set foo bar 会将 foo 和 bar 分别设置为 $1 和 $2。
- 显示和修改Shell选项：使用 set -<option> 命令可以启用或禁用特定的Shell选项。
  例如，set -e 启用了脚本的异常终止（错误即退出）选项。
- 显示和修改变量：使用 set 命令可以显示当前设置的变量。
  例如，set 会显示所有的环境变量和用户定义的变量。可以使用 set <variable>=<value> 来修改或创建新的变量。
- 展开变量：使用 set -x 命令可以打开脚本的调试模式，从而在运行脚本时输出每个命令的展开结果。
- 处理命令行选项：使用 set -- <args> 可以将指定的参数设置为脚本的位置参数，这样就可以像处理命令行选项一样访问和处理这些参数。
- 配置特殊字符：使用 set 命令可以更改Shell的特殊字符处理方式。
  例如，使用 set -f 可以禁用文件名扩展。

.. note::

  set 命令的具体行为可能会因不同的Shell和环境而有所不同。
  可以使用 help set 或查阅相关文档来获取更详细的信息

在 shell 中执行 `set -x` 或使用 `-x` 选项启动 shell
可以让 shell 显示出所有执行的命令.
对调试来说是非常方便的
