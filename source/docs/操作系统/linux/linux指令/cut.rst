==================
cut
==================

显示行中的指定部分，删除文件中指定字段。

语法::

  cut（选项）（参数）

选项

-b      仅显示行中指定直接范围的 **字节** 内容；
-c      仅显示行中指定范围的 **字符** ；
-d      指定字段的分隔符，默认的字段分隔符为“TAB”；
-f      显示指定 **字段** （指定列）的内容；
-n      与“-b”选项连用，不分割多字节字符；
--complement                  补足被选择的字节、字符或字段；
--out-delimiter=<字段分隔符>  指定输出内容是的字段分割符；

字节字符如何写参数
  - N-：从第N个字节、字符、字段到结尾；
  - N-M：从第N个字节、字符、字段到第M个（包括M在内）字节、字符、字段；
  - -M：从第1个字节、字符、字段到第M个（包括M在内）字节、字符、字段。

例-从文件中提取第三列并打印::

  cut -f3 file.txt

支持多列, 如第3, 4列打印::

  cut -f3,4 file.txt

cut命令默认使用制表符作为字段分隔符。
如果您的数据使用其他分隔符，例如逗号或空格，您可以使用 -d 选项指定分隔符。
例如，对于以逗号分隔的数据，您可以使用以下命令::

  cut -d',' -f3 file.csv

.. note::

  在MacOS上(其他系统不确定), 对于连续空格识别有点问题, 如::

    echo "mysql                    <none>             57da161f45ac   12 months ago   517MB" | cut -f3

  的结果是打印整个行; 而::

    echo "mysql                    <none>             57da161f45ac   12 months ago   517MB" | cut -d ' ' -f3

  的输出是空;

  只有这样的才能正常处理::

    $ echo "mysql <none> 57da161f45ac 12 months ago 517MB" | cut -d ' ' -f3
    57da161f45ac

  不知道是不是tab识别有问题...
