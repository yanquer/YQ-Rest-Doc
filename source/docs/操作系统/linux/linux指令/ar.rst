======================
ar
======================

Linux ar命令用于建立或修改备存文件，或是从备存文件中抽取文件。
ar可让您集合许多文件，成为单一的备存文件。在备存文件中，所有成员文件皆保有原来的属性与权限。

当我们的程序中有经常使用的模块，而且这种模块在其他程序中也会用到，
这时按照软件重用的思想，我们应该将它们生成库，使得以后编程可以减少开发代码量。

ar命令可以用来创建、修改库，也可以从库中提出单个模块。
库是一单独的文件，里面包含了按照特定的结构组织起来的其它的一些文件（称做此库文件的member）。
原始文件的内容、模式、时间戳、属主、组等属性都保留在库文件中。

语法::

  ar[-dmpqrtx][cfosSuvV][a<成员文件>][b<成员文件>][i<成员文件>][备存文件][成员文件]

参数
======================

必要参数：

-d    删除备存文件中的成员文件。
-m    变更成员文件在备存文件中的次序。
-p    显示备存文件中的成员文件内容。
-q    将文件附加在备存文件末端。
-r    将文件插入备存文件中。
-t    显示备存文件中所包含的文件。
-x    自备存文件中取出成员文件。

选项参数：

a<成员文件>
  将文件插入备存文件中指定的成员文件之后。
b<成员文件>
  将文件插入备存文件中指定的成员文件之前。
c
  建立备存文件。
f
  为避免过长的文件名不兼容于其他系统的ar指令指令，因此可利用此参数，截掉要放入备存文件中过长的成员文件名称。
i<成员文件>
  将文件插入备存文件中指定的成员文件之前。
o
  保留备存文件中文件的日期。
s
  若备存文件中包含了对象模式，可利用此参数建立备存文件的符号表。
S
  不产生符号表。
u
  只将日期较新文件插入备存文件中。
v
  程序执行时显示详细的信息。
V
  显示版本信息。

用例:

即可以将 b.o(对象文件) 加入到liba.a中, 即打包为静态库文件::

  ar -r liba.a b.o

默认的加入方式为append，即加在库的末尾。"r"关键字可以有三个修饰符"a", "b"和"i"。

- "a"表示after，即将新成员加在指定成员之后。例如"ar -ra a.c liba.a b.c"表示将b.c加入liba.a并放在已有成员a.c之后；
- "b"表示before，即将新成员加在指定成员之前。例如"ar -rb a.c liba.a b.c";
- "i"表示insert，跟"b"作用相同。


