=======================
tar
=======================

常用几个::

  -zcvf             创建新包
  -zxvf             解压包
  -tf               查看包内文件列表

**选项**

-c, --create          建立新的备份文件
-C <dir>              切换工作目录，先进入指定目录再执行压缩/解压缩操作，
-x, --extract, --get  从归档文件中提取文件，可以搭配-C（大写）在特定目录解开
-z, --gzip, --ungzip  通过gzip指令压缩/解压缩文件，文件名最好为*.tar.gz
-v, --verbose         显示指令执行过程
-t                    查看打包好的tar包内容(不解包查看)
-f <tar_file>, --file=<tar_file>
                      指定备份文件；
-d                    记录文件的差别；
-r                    添加文件到已经压缩的文件；
-u                    添加改变了和现有的文件到已经存在的压缩文件；
-j                    通过bzip2指令压缩/解压缩文件，文件名最好为*.tar.bz2；
-l                    文件系统边界设置；
-k                    保留原有文件不覆盖；
-m                    保留文件不被覆盖；
-w                    确认压缩文件的正确性；
--exclude=<exclude_list>
                      排除不打包文件, 支持通配符
-p, --same-permissions
                      保留原来的文件权限与属性,
                      这里指的是文件的特殊属性, 因为tar默认就会恢复文件权限与属性
-P, --absolute-names  使用文件名的绝对路径，不移除文件名称前的“/”号
--owner=user1         指定解压后的属主, 实际测试没用
--group=group1        指定解压后的属组, 实际测试没用

-N <日期格式>, --newer=<日期时间>
                      只将较指定日期更新的文件保存到备份文件里；
--remove-files        归档/压缩之后删除源文件

-–strip-components=NUMBER
                      解压时从文件名中清除 NUMBER 个引导部分, 即抛弃前NUMBER个路径

全部

-A, --catenate        新增文件到以存在的备份文件；
-B                    设置区块大小；
-c, --create          建立新的备份文件；
-C <目录>             切换工作目录，先进入指定目录再执行压缩/解压缩操作，可用于仅压缩特定目录里的内容, 解压缩到特定目录；
-d                    记录文件的差别；
-x, --extract, --get  从归档文件中提取文件，可以搭配-C（大写）在特定目录解开，
                      需要注意的是-c、-t、-x不可同时出现在一串命令中；
-t, --list            列出备份文件的内容；
-z, --gzip, --ungzip  通过gzip指令压缩/解压缩文件，文件名最好为*.tar.gz；
-Z, --compress, --uncompress
                      通过compress指令处理备份文件；
-f<备份文件>, --file=<备份文件>
                      指定备份文件；
-v, --verbose         显示指令执行过程；
-r      添加文件到已经压缩的文件；
-u      添加改变了和现有的文件到已经存在的压缩文件；
-j      通过bzip2指令压缩/解压缩文件，文件名最好为*.tar.bz2；
-v      显示操作过程；
-l      文件系统边界设置；
-k      保留原有文件不覆盖；
-m      保留文件不被覆盖；
-w      确认压缩文件的正确性；
-p, --same-permissions
                      保留原来的文件权限与属性；
-P, --absolute-names  使用文件名的绝对路径，不移除文件名称前的“/”号；
-N <日期格式>, --newer=<日期时间>
                      只将较指定日期更新的文件保存到备份文件里；
--exclude=<范本样式>  排除符合范本样式的文件；
--remove-files        归档/压缩之后删除源文件

如::

  tar zxf xxx.tar.gz -–strip-components=1

假定原包内文件为: `a/b/c`, 使用 `-–strip-components=1` 后, 解压后的内容仅有 `b/c`
(去除了前一层目录)



删除归档中文件
=======================

只能删除tar包. gz不行(Mac下不行)::

  tar --delete -vf xxx.tar need_delete_file

tar默认行为说明
=======================

关于tar保留文件权限与属性的说明:

- tar默认会尽量保留普通的文件权限与属性(如所有者, 权限号), 不能保留特殊的属性
- 特殊的权限需要使用 ``-p`` 才能保留, 如设备文件、符号链接、ACLs等

关于报错：`file changed as we read it`
==============================================

是因为在打包的过程中文件发生了变化，所以导致报错，但是打包依然进行并且有效。
在使用tar命令时加上--warning=no-file-changed参数即可不输出报错。

关于报错 `tar: write error`
==============================================

暂时不知道原因, 可能同一个脚本使用不同的渠道执行就会有这个报错,
搜了一下也没搜到

暂时发现, 去掉v参数或者重定向到null可以解决

tar相关权限变化
==============================================

默认情况下,

压缩文件时的用户权限变化：
  - 以超级用户（root）身份运行tar命令, 保留所有文件和目录的所有权和权限信息
  - 以普通用户身份运行tar命令，则压缩后的归档文件将会保留文件的所有权信息,
    但不会包含文件的权限信息

解压缩文件时的用户权限变化：
  - 以超级用户身份运行tar命令来解压缩归档文件,
    则解压后的文件将保持其原始的所有权和权限信息。
  - 以普通用户身份运行tar命令来解压缩归档文件
    则解压后的文件将被赋予该用户的所有权，并且文件权限可能会被设置为默认值（通常是较为宽松的权限）.

- 文件所有权指, 属主属组
- 文件权限指, 755这种






