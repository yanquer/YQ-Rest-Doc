===============================
问题总结
===============================


.. post:: 2023-02-26 21:30:12
  :tags: Mac, 问题
  :category: 操作系统
  :author: YanQue
  :location: CD
  :language: zh-cn


App窗口弹出在最上层
===============================

这个分两种情况, 一个是普通App,
一个是系统级App

对于普通App的View
  单独View的显示需要先讲其转换为NsWindow然后配置显示::

    import SwiftUI

    extension TipView{

        // MARK: - Interface

        func showViewOnNewWindowInSpecificTime(during timer: CGFloat) -> NSWindow {
            let alertWindow = self.setWindow()
            displayAsAlert(win: alertWindow, Timer: timer)
            return alertWindow
        }


        // MARK: - Attribute

        private func displayAsAlert(win:NSWindow, Timer:Double) {

            // 在当前窗口上显示
            win.level = .floating

            win.isMovableByWindowBackground = false
            win.titleVisibility = .hidden
            win.titlebarAppearsTransparent = true
            win.isOpaque = false
            win.styleMask.remove(.closable)
            win.styleMask.remove(.fullScreen)
            win.styleMask.remove(.miniaturizable)
            win.styleMask.remove(.fullSizeContentView)
            win.styleMask.remove(.resizable)
            win.backgroundColor = NSColor.clear
            win.orderFrontRegardless()


            DispatchQueue.main.asyncAfter(deadline: .now() + Timer) {
                win.close()
            }
        }

        private func setWindow() -> NSWindow {
            NSWindow(contentViewController: NSHostingController(rootView: self))
        }
    }

  主要是 ``win.level = .floating`` , 设置为浮动窗口

  但是若想弹出在其他全屏App上就不行了.

系统级App
  这里的 系统级App 指的是设置了 ``Application is agent (UIElement)``
  为 ``YES`` 的APP, 此配置作用详见 :doc:`/docs/后端/swift/Xcode的Info配置`

  设置后默认就是系统级的App, 不需要再像普通App那样设置浮动窗口,
  默认可以显示在其他全屏App上

查看固态寿命
===============================

也支持电池循环数啥的,
使用 :doc:`/docs/操作系统/linux/linux指令/smartctl` 指令::

  smartctl -a /dev/disk0




