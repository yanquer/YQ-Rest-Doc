===========================
关于位掩码
===========================


.. post:: 2023-02-20 22:06:49
  :tags:
  :category: 杂乱无章
  :author: YanQue
  :location: CD
  :language: zh-cn


位掩码（BitMask），是”位（Bit）“和”掩码（Mask）“的组合词。
”位“指代着二进制数据当中的二进制位，
而”掩码“指的是一串用于与目标数据进行按位操作的二进制数字。
组合起来，就是”用一串二进制数字（掩码）去操作另一串二进制数字“的意思。

一般将1左移多少位表示位掩码来进行位运算,
解决当数量多时, 判断的复杂度高的问题

.. note::

  ``1 << 0`` 表示 **1左移0位**,
  而不是 0左移1位

常见于权限分配
  比如一个系统有四个权限位::

    delete = 0
    read = 1
    update = 2
    create = 3

  .. 如果要判断一个用户拥有哪几种权限时,
  .. 如果写四个if, 空间复杂读就是O(4),
  .. 如果把这四个放到一个列表循环, 时间复杂度就是O(4),

  但是如果用位掩码(mask = 0b1)来查询是否有update权限::

    delete = 1 << 0     // 0000 0001
    read = 1 << 1     // 0000 0010
    update = 1 << 2     // 0000 0100
    create = 1 << 3     // 0000 1000


  如果用户的只有读权限 update, 直接bool判断::

    1 << 1 & 1 << 2   // false,  0000 0010 & 0000 0100

  如果要加 update , 使用异或::

    1 << 1  ^ 1 << 2  // 0000 0010 ^ 0000 0100 = 0000 0110

  如果

进制表示前缀
===========================

- 二进制前缀: ``0b``

经典问题-3只老鼠找8瓶水毒
===========================

有一个很经典的算法题，说是有1000个一模一样的瓶子，
其中有999瓶是普通的水，有一瓶是毒药。
任何喝下毒药的生物都会在一星期之后死亡。
现在，你只有10只小白鼠和一星期的时间，如何检验出哪个瓶子里有毒药？
如果按照常规的解法是不是很繁琐，我们不妨思考一下用二进制来处理。

具体实现跟 **3个老鼠确定8个瓶子** 原理一样::

  000=0
  001=1
  010=2
  011=3
  100=4
  101=5
  110=6
  111=7

一位表示一个老鼠，0-7表示8个瓶子。
也就是分别将1、3、5、7号瓶子的药混起来给老鼠1吃，
2、3、6、7号瓶子的药混起来给老鼠2 吃，
4、5、6、7号瓶子的药混起来给老鼠3吃，

哪个老鼠死了，相应的位标1。

如老鼠1死了、老鼠2没死、老鼠3死了，那么就是 101=5号瓶子有毒。
同样道理10个老鼠可以确定1000个瓶子。








