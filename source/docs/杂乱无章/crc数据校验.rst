==========================
CRC数据校验
==========================


.. post:: 2023-06-11 18:06:14
  :tags: 
  :category: 杂乱无章
  :author: YanQue
  :location: CD
  :language: zh-cn


CRC（Cyclic Redundancy Check）循环冗余校验.

.. topic:: `百度百科 - 循环冗余检查 <https://baike.baidu.com/item/循环冗余检查/10168241?fromtitle=CRC&fromid=1453359>`_

  是一种根据网上数据包或计算机文件等数据产生简短固定位数校验码的一种散列函数，主要用来检测或校验数据传输或者保存后可能出现的错误。生成的数字在传输或者存储之前计算出来并且附加到数据后面，然后接收方进行检验确定数据是否发生变化。一般来说，循环冗余校验的值都是32位的整数。

校验原理
==========================

.. sidebar::

  被除数 除以 除数 = 商

- **发送端** 和 **接收端** 选定一个特定的数 (这里称之且后文都称之为 **除数** )
- 在 **发送端** 发送的二进制帧附加一个 **二进制校验码** , 生成一个 **新的帧** . 注意: 需要保证能与 **除数** 整除
- 到达 **接受端** , 使用接受到的 **新的帧** , 尝试与 **除数** 整除, **没有余数** 就是正确的, 有余数说明数据已被修改.
- 以上计算使用 **模二除法** (没有进位)

模二计算
==========================

无进位的二进制计算

模二加法::

  0+0=0
  0+1=1
  1+0=1
  1+1=0

模二减法::

  0-0=0
  0-1=1
  1-0=1
  1-1=0

模二乘法::

  0x0=0
  0x1=0
  1x0=0
  1x1=1

模二除法, 与普通除法类似, 不过加减时使用 模二加减法

示例
==========================

选定CRC生成多项式为

.. math::
  :name: CRC生成多项式

  G(X) = X^4 + X^3 + 1

要求出二进制序列 ``10110011`` 的 CRC校验码.

- 首先, 将 CRC生成多项式_ 转换为二进制序列 ``11001`` (第一位, 第四位, 第五位是1)
- 多项式的位数为5, 则在数据帧的后面加上 (5-1) 位 0, 数据帧变为 ``101100110000`` , 然后使用模2除法除以除数 ``11001`` , 得到余数 ``0100`` (若余数位数不足, 在首部补0).
- 将计算出来的CRC校验码 ``0100`` 添加在原始帧的后面, 真正的数据帧为 ``101100110100`` , 再把这个数据帧发送到接收端.
- 接收端收到数据帧后, 用上面选定的除数, 用模2除法除去, 验证余数是否为0, 如果为0, 则说明数据帧没有出错



看到一篇解释很详细的: `史上解释CRC最清楚的文章 <https://zhuanlan.zhihu.com/p/396165368>`_

