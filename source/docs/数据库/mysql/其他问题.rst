===========================
其他问题
===========================


.. post:: 2023-02-20 22:06:49
  :tags: mysql
  :category: 数据库
  :author: YanQue
  :location: CD
  :language: zh-cn


联合索引的实现
===========================

按照每一个索引的顺序来进行排序,
如 ``(A, B, C)`` , 先按A排序,
A相等就看B,
要是ABC都相等, 就看主键

创建联合索引::

  KEY `idx_name_age_position` (`name`, `age`, `position`) USING BTREE

如何查询SQL执行计划
===========================

EXPLAIN 加 数据库语句

一些原则
===========================

高并发场景下, 数据库尽量不要多表关联,
比如阿里就禁止超过三张表的JOIN

因为会降低DB性能

对于高并发来说, DB卡死, 基本上依赖这个DB的都会被影响,

大部分都是采取, 将数据的整合转移到WEB应用上去,
因为WEB有瓶颈了, 扩容WEB就行等...

.. todo: 有空可以研究下 表关联的底层实现.

binlog
===========================

可以开启binlog日志,
可以记录对数据库的增删改操作.

删库跑路啥的, 有binlog可以尝试恢复.

数据库CPU飙升
===========================

排查过程
  - 使用top 命令观察，确定是 mysqld 导致还是其他原因。
  - 如果是 mysqld 导致的，show processlist，查看 session 情况，确定是不是有消耗资源的 sql 在运行。
  - 找出消耗高的sql，看看执行计划是否准确，索引是否缺失，数据量是否太大。

处理
  - kill掉这些线程（同时观察 cpu 使用率是否下降），
  - 进行相应的调整（比如说加索引、改sq、改内存参数）
  - 重新跑这些 SQL。

其他情况
  也有可能是每个 sq|消耗资源并不多，但是突然之间，有大量的 session 连进来导致cpu 飙升，
  这种情况就需要跟应用一起来分析为何连接数会激增，再做出相应的调整，比如说限制连接数等。

G和g作用
===========================

其实是::

  \g 和 \G

``\g``
  表示在MySQL的sql语句后加上 ``\g``，效果等同于加上定界符，一般默认的定界符是分号;
  可以兼容特意修改了定界符的情况;
``\G``
  在MySQL的sql语句后加上 ``\G``，表示将查询结果进行按列打印，可以使每个字段打印到单独的行。

  因为如果不这样, 有些表列很多, 会有折行, 阅读不友好.
