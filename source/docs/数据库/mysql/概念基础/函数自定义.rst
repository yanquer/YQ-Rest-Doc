=================================
自定义函数
=================================


.. post:: 2023-02-20 22:06:49
  :tags: mysql, 概念基础
  :category: 数据库
  :author: YanQue
  :location: CD
  :language: zh-cn


可能会遇到内置函数 :doc:`/docs/数据库/mysql/概念基础/函数API`
满足不了使用场景的问题, 这时候自定义函数就有用了

自定义函数是一种与存储过程十分相似的过程式数据库对象。
它与存储过程一样，都是由 SQL 语句和过程式语句组成的代码片段，并且可以被应用程序和其他 SQL 语句调用。

自定义函数与存储过程之间存在几点区别：

- 自定义函数不能拥有输出参数，这是因为自定义函数自身就是输出参数；而存储过程可以拥有输出参数。
- 自定义函数中必须包含一条 RETURN 语句，而这条特殊的 SQL 语句不允许包含于存储过程中。
- 可以直接对自定义函数进行调用而不需要使用 CALL 语句，而对存储过程的调用需要使用 CALL 语句。

创建
=================================

语法::

  CREATE FUNCTION <函数名> ( [ <参数1> <类型1> [ , <参数2> <类型2>] ] … )
  RETURNS <类型>
  <函数主体>

- 函数名: 应该合法的标识符，并且不应该与已有的关键字冲突, 包括已有函数名, 已有存储过程名称
  一个函数应该属于某数据库，可以使用 db_name.funciton_name 的形式执行当前函数所属数据库, 否则默认为当前数据库。
- 参数列表: 可以有一个或者多个函数参数，甚至是没有参数也是可以的。对于每个参数，由参数名和参数类型组成。
- 返回值: 指明返回值类类型
- 函数体: 自定义函数的函数体由多条可用的MySQL语句，流程控制，变量声明等语句构成。
  需要指明的是函数体中一定要含有return 返回语句。

.. note::

  创建函数时, 若不指定库名, 会创建在当前库, 使用时也是

示例-无参函数::

  mysql> DROP FUNCTION IF EXISTS hello;
  Query OK, 0 rows affected, 1 warning (0.00 sec)

  mysql> DELIMITER $$
  mysql> CREATE FUNCTION hello()
      ->  RETURNS VARCHAR(255)
      -> BEGIN
      ->  RETURN 'Hello  world,i am mysql';
      -> END $$
  Query OK, 0 rows affected (0.11 sec)

  mysql> DELIMITER ;
  mysql> SELECT hello();
  +-------------------------+
  | hello()                 |
  +-------------------------+
  | Hello  world,i am mysql |
  +-------------------------+
  1 row in set (0.00 sec)

示例-含有参数的自定义函数::

  mysql> DELIMITER $$
  mysql> DROP FUNCTION IF EXISTS test.formatDate $$
  Query OK, 0 rows affected, 1 warning (0.07 sec)

  mysql> CREATE FUNCTION   test.formatDate(fdate datetime)
      ->  RETURNS VARCHAR(255)
      -> BEGIN
      ->  DECLARE x VARCHAR(255) DEFAULT '';
      ->  SET x= date_format(fdate,'%Y年%m月%d日%h时%i分%s秒');
      ->  RETURN x;
      -> END $$
  Query OK, 0 rows affected (0.11 sec)

  mysql> DELIMITER ;
  mysql> SELECT   formatDate(now());
  +----------------------------+
  | formatDate(now())          |
  +----------------------------+
  | 2014年11月21日03时41分21秒 |
  +----------------------------+
  1 row in set (0.18 sec)

查询自定义函数
=================================

查看数据库中存在哪些自定义函数::

  SHOW FUNCTION STATUS

若要查看数据库中某个具体的自定义函数::

  SHOW CREATE FUNCTION<函数名>

查看函数状态, 比如创建时间之类::

  SHOW FUCNTION STATUS LIKE '函数名'

其中<函数名>用于指定该自定义函数的名称。

修改自定义函数
=================================

修改函数相关特征::

  ALTER FUNCTION func_name [characteristic ...]

  characteristic:
      COMMENT 'string'
    | LANGUAGE SQL
    | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }
    | SQL SECURITY { DEFINER | INVOKER }

上面这个语法结构是MySQL官方给出的，修改的内容可以包含SQL语句也可以不包含，
既可以是读数据的SQL也可以是修改数据的SQL还有权限。
此外在修改function的时候还需要注意你不能使用这个语句来修改函数的参数以及函数体，
如果你想改变这些的话你就需要删除掉这个函数然后重新创建。

例子::

  mysql> SELECT hello();
  +-------------------------+
  | hello()                 |
  +-------------------------+
  | Hello  world,i am mysql |
  +-------------------------+
  1 row in set (0.00 sec)

  mysql> ALTER FUNCTION hello
      ->
      -> READS SQL DATA
      -> COMMENT 'print  hello';
  Query OK, 0 rows affected (0.23 sec)

  mysql>  SELECT SPECIFIC_NAME,SQL_DATA_ACCESS,
      -> ROUTINE_COMMENT FROM information_schema.Routines
      -> WHERE ROUTINE_NAME='hello';
  +---------------+-----------------+-----------------+
  | SPECIFIC_NAME | SQL_DATA_ACCESS | ROUTINE_COMMENT |
  +---------------+-----------------+-----------------+
  | hello         | READS SQL DATA  | print  hello    |
  +---------------+-----------------+-----------------+
  1 row in set (0.21 sec)

若要修改自定义函数的内容，则需要先删除该自定义函数，然后重新创建。

参考: `MySQL之自定义函数 <https://www.cnblogs.com/zhangminghui/p/4113160.html>`_

删除自定义函数
=================================

自定义函数被创建后，一直保存在数据库服务器上以供使用，直至被删除。
删除自定义函数的方法与删除存储过程的方法基本一样，可以使用 DROP FUNCTION 语句来实现。

语法::

  DROP FUNCTION [ IF EXISTS ] <自定义函数名>

自定义函数相关语法及变量
=================================

变量声明
---------------------------------

语法::

  DECLARE var_name[,...] type [DEFAULT value]

声明局部变量。要给变量提供一个默认值，请包含一个DEFAULT子句。
值可以被指定为一个表达式，不需要为一个常数。
如果没有DEFAULT子句，初始值为NULL。
使用语序使用 set 和 select into语句为变量赋值::

  set var_name = '';

IF  条件语句
---------------------------------

语法::

  IF search_conditionTHEN

  statement_list

  [ELSEIF search_conditionTHENstatement_list]

  ...

  [ELSE statement_list]

  ENDIF;

CASE语句
---------------------------------

语法::

  CASE case_value

  WHEN when_valueTHENstatement_list

  [WHEN when_value THENstatement_list]

  ...

  [ELSE statement_list]

  END CASE;

循环语句
---------------------------------

语法::

  While

  [begin_label:]WHILEsearch_conditionDO

  statement_list

  END WHILE [end_label];

- 退出整个循环使用 leave, 相当于break
- 退出当前循环使用 iterate, 相当于 continue

通过退出的标签决定退出哪个循环。

