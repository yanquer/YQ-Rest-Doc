==========================
问题总结
==========================

通过变量生成正则
==========================

如果是确定字符的正则::

  /\.txt$/g

表示匹配所有以 `.txt` 结尾

但是不支持直接拼接变量, 比如想匹配的可能以其他指定字符串结尾,
就只有通过显示的示例::

  const regStr = '.txt'
  new RegExp(regStr + '$', 'g')

与上效果一致.

判断是否是数组
==========================

使用 `Array` 内置方法::

  Array.isArray(obj)

判断是否是绝对路径
==========================

使用正则匹配 是否是斜杠开头 或者 是否是字母+冒号+双反斜杠 开头::

  /^(\/|[a-z]:\\)/i.test(target)

test是JS正则自带函数, 返回值为 boolean

JS设置预定义变量
==========================

有时候, 如果在CSS定义了变量比如背景色,
但可能这个颜色是动态加载的, 导致初始化的时候这个颜色就
会没有定义,
这个时候可以在最初的页面, JS动态设置一个颜色::

  document.documentElement.style.setProperty('--body-bg', '#1E1E1E')

上次的颜色可以提前放在localStorage::

  window.localStorage.setItem('bg-color', '#1E1E1E')

逻辑运算符??与||区别
==========================

**??** 运算符(空值合并运算符（Nullish Coalescing Operator）)
**只会在左操作数为 null 或 undefined 时返回右操作数作为默认值**。
对于其他 falsy 值（如 false、0、空字符串等），?? 运算符不会触发提供默认值的行为

**||** 运算符在 **左操作数为任何 falsy 值时都会返回右操作数** 作为默认值

例::

  > 0 || 4
  4
  > 0 ?? 4
  0



