============================
str
============================


.. post:: 2024-03-12 19:49:08
  :tags: python, 内置函数
  :category: 后端
  :author: YanQue
  :location: CD
  :language: zh-cn


python3一个新特性就是对文本和二进制做了更清晰的划分，
文本是str，二进制是byte(\x01\x06...)

- 编码: encode：str --> byte
- 解码: decode：byte --> str

join::

  ''.join(list)			#将list转换为字符串，以''中定义的字符串分隔

str.split::

  str.split('')			#将str以''中定义的分隔为数组

rpartition, 从右边第一个指定的字符开始分隔::

  #!/usr/bin/python

  str = "www.runoob.com"

  print str.rpartition(".")

  # ('www.runoob', '.', 'com')

数字操作 hex(), 10进制整数转换成16进制

字符串的拼接使用join
=============================

字符串的拼接有两种方式
- +     如果有n个字符串需要拼接，就会进行n-1次内存空间申请
- join  只会进行一次空间申请，申请时会统计所有字符串的个数，以及总的长度。再逐一进行字符串的拷贝

求其中某值的个数
=============================

使用 count, 如::

  In [22]: "1110".count("1")
  Out[22]: 3

zfill
=============================

字符串指定长度, 左侧补0::

  In [4]: "123".zfill(5)
  Out[4]: '00123'

ljust
=============================

字符串指定长度, 左侧对齐, 右侧补充指定字符

如左对齐, 右侧补0::

  In [2]: "123".ljust(5, "0")
  Out[2]: '12300'

rjust
=============================

字符串指定长度, 右侧对齐, 左侧补充指定字符

如右对齐, 左侧补0::

  In [3]: "123".rjust(5, "0")
  Out[3]: '00123'

lower
=============================

将字符串全部转换为小写

upper
=============================

将字符串全转换为大写

title
=============================

将字符串首字母大写




