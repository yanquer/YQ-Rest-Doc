==========================
C++
==========================


.. post:: 2023-02-20 22:06:49
  :tags: c
  :category: 后端
  :author: YanQue
  :location: CD
  :language: zh-cn


最初本来是在 :doc:`/docs/后端/c/基础知识` 等里面混着C与C++说, 后面是越来越多了, 觉得还是分了好点.

数组形参与实参的说明
==========================

在C++中,如果形参类型是`char a[]`(或其他数组类型),它会默认 decay(退化) 成 char*(或相应的指针类型)。
所以 char a[] 形参会被视为 char* a.

举一个例子::

  void print(char a[]) {
      cout << a << endl;
  }

  int main() {
      char str[] = "Hello";
      print(str);
  }

这里, print 函数的形参是 ``char a[]``, 但是在调用 ``print(str)`` 时,
str 数组会自动退化为指针.
所以实际上 a 是 char* 类型,并且指向字符串 `"Hello"` .

函数形参定义是否应该使用指针
==========================================

主要取决于我们是否需要修改原变量的值吧

- 当需要修改原变量值时, 必须传递指针, 比如结构体;
- 不需要修改值时, 都可以, 不过使用指针是对原来变量的引用可以节省空间. 否则就是变量的复制.



char \*str[]与char str[]区别
==========================================

- char \*str[] 是一维字符指针数组。它的每个元素都是一个指向字符串的指针。 (赋值字符串)
- char str[] 是一维字符数组。它的每个元素都是一个字符。(赋值字符)

将字符指针(字符串)赋值给了数组元素。每个数组元素都指向一个字符串::

  char *str[] = {
      "Hello",
      "World",
      "!"
  };

  cout << str[0] << ' ' << str[1] << endl; // Hello World

将字符(字符值)赋值给了数组元素。数组中每个元素都是一个字符::

  char str[] = {
      'H',
      'e',
      'l',
      'l',
      'o'
  };

  cout << str << endl; // Hello



