=============================
SQL注入
=============================

SQL注入是一种非常常见的一种数据库攻击手段，我们平时用的所有网站，
软件都会用到数据库，只要有数据库存在的地方就可能存在 SQL 注入漏洞。

SQL注入攻击的核心在于让Web服务器执行攻击者期望的SQL语句，
以便得到数据库中的感兴趣的数据或对数据库进行读取、修改、删除、插入等操作，达到其邪恶的目的。

而如何让Web服务器执行攻击者的SQL语句呢？
SQL注入的常规套路在于将SQL语句放置于Form表单或请求参数之中（比如说SELECT、DROP等等）
提交到后端服务器，后端服务器如果未做输入安全校验，直接将变量取出进行数据库查询，则极易中招。

举个简单的SQL注入例子
  对于一个根据用户ID获取用户信息的接口，后端的SQL语句一般是这样::

    select name,[...] from t_user whereid=$id

  其中，$id就是前端提交的用户id，那前端的请求如果是这样::

    GET xx/userinfo?id=1%20or%201=1

  请求参数id转义后就是1 or 1=1，如果后端不做安全过滤直接提交数据库查询，SQL语句就变成了::

    select name,[...] from t_user where id=1 or 1=1

  最终结果就是把用户表中的所有数据全部查出，已经达到了攻击者泄露数据的目的

上面只是一个非常简单的注入示例，在真实的SQL注入攻击中参数构造和SQL语句远比这复杂得多，
攻击者攻击的位置也复杂的多，不过原理是一致的。复杂度提升产生的攻击效果可想而知。







