==============================
XSS 攻击
==============================


.. post:: 2023-02-20 22:06:49
  :tags: 常见漏洞
  :category: 安全
  :author: YanQue
  :location: CD
  :language: zh-cn


XSS全称是跨站脚本攻击（Cross Site Scripting），
为了和重叠样式表CSS区分，换了另一个缩写XSS。

简单来说就是某饭店要进一批酸菜，张三在送货车快到饭店的时候，
偷偷上车把原来的酸菜换成了“老坛酸菜”，
随后老坛酸菜”被放入饭店仓库。
此后只要有人来饭店吃酸菜鱼，就会被“美味”攻击，让用户毫不知情的踩坑

XSS攻击的核心是将可执行的前端脚本代码（一般为JavaScript）植入到网页中，
通常指的是通过利用网页开发时留下的漏洞，
注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。

这些恶意网页程序通常是JavaScript，
但也存在Java、 VBScript、ActiveX、 Flash 或者甚至是普通的HTML代码。
一旦攻击成功后，攻击者可能得到一些用户或管理员权限（权限上不封顶）

那我们来聊聊攻击者是如何办到的呢？

一般XSS攻击分为两种：反射型和存储型

反射型
  攻击者将JS代码作为请求参数放置URL中，诱导用户点击，落入陷阱.

  比如, 攻击者首先将JS代码作为请求参数放置URL中，诱导用户点击::

    http://localhost:8080/test?name=<script>alert("嗨害嗨，你已经被攻击了!")</script>

  等用户点击后，该JS就会作为请求参数传给Web服务器后端。
  如果后端服务器没有很完善的检查过滤，
  就会简单处理后放入网页正文中返回给浏览器，
  等浏览器解析返回的网页后，用户已经中招了！
存储型
  上面反射型攻击脚本直接经服务器，转手后返回浏览器触发执行;
  存储型和它的区别在于能够将攻击脚本入库存储，
  在后面进行查询时，再将攻击脚本渲染进网页，返回给浏览器触发执行.

  举个例子,
  XSS攻击就好比攻击者在某网页论坛中回复一个帖子，
  帖子中包含JS脚本，回帖提交服务器后，就会存储至数据库。
  其他网友查看这个帖子后，后台会自动查询该帖子的回帖内容，
  然后构建出完整网页，返回浏览器。
  此时，该网友浏览器渲染返回的网页已经中招！
  该网友的浏览器已经变成了靶子...




